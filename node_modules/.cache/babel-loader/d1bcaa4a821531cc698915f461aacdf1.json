{"ast":null,"code":"const errorDWAlert = 'O total de área das portas e janelas deve ser no máximo 50% da área de parede';\nconst windowSquare = 24000;\nconst wallWindowOne = Math.ceil(Number(firstWindow)) * windowSquare;\nconst wallWindowTwo = Math.ceil(Number(secondWindow)) * windowSquare;\nconst wallWindowThree = Math.ceil(Number(thirdWindow)) * windowSquare;\nconst wallWindowFour = Math.ceil(Number(fourthWindow)) * windowSquare;\nconst doorSquare = 15200;\nconst wallDoorOne = Math.ceil(Number(firstDoor)) * doorSquare;\nconst wallDoorTwo = Math.ceil(Number(secondDoor)) * doorSquare;\nconst wallDoorThree = Math.ceil(Number(thirdDoor)) * doorSquare;\nconst wallDoorFour = Math.ceil(Number(fourthDoor)) * doorSquare;\n\nconst verifyFirstDoorWindow = (heightOne, widthtOne, navigate) => {\n  const firstWall = Math.ceil(Number(heightOne) * Number(widthtOne));\n\n  if (Number(wallWindowOne) + Number(wallDoorOne) > firstWall / 2) {\n    alert(errorDWAlert);\n    return navigate('/firstWall');\n  }\n};\n\nconst verifySecondDoorWindow = (heightTwo, widthtTwo, navigate) => {\n  const secondWall = Math.ceil(Number(heightTwo) * Number(widthtTwo));\n\n  if (Number(wallWindowTwo) + Number(wallDoorTwo) > secondWall / 2) {\n    alert(errorDWAlert);\n    return navigate('/secondWall');\n  }\n};\n\nconst verifyThirdDoorWindow = (heightThree, widthtThree, navigate) => {\n  const thirdWall = Math.ceil(Number(heightThree) * Number(widthtThree));\n\n  if (Number(wallWindowThree) + Number(wallDoorThree) > thirdWall / 2) {\n    alert(errorDWAlert);\n    return navigate('/thirdWall');\n  }\n};\n\nconst verifyFourthDoorWindow = (heightFour, widthtFour, navigate) => {\n  const fourthWall = Math.ceil(Number(heightFour) * Number(widthtFour));\n\n  if (Number(wallWindowFour) + Number(wallDoorFour) > fourthWall / 2) {\n    alert(errorDWAlert);\n    return navigate('/fourthWall');\n  }\n};\n\nexport { verifyFirstDoorWindow, verifySecondDoorWindow, verifyThirdDoorWindow, verifyFourthDoorWindow };","map":{"version":3,"sources":["/home/cae/digitalRepuclic/app-digital-republic/digital-republic/src/Helpers/VerifyDoorsAndWindows.jsx"],"names":["errorDWAlert","windowSquare","wallWindowOne","Math","ceil","Number","firstWindow","wallWindowTwo","secondWindow","wallWindowThree","thirdWindow","wallWindowFour","fourthWindow","doorSquare","wallDoorOne","firstDoor","wallDoorTwo","secondDoor","wallDoorThree","thirdDoor","wallDoorFour","fourthDoor","verifyFirstDoorWindow","heightOne","widthtOne","navigate","firstWall","alert","verifySecondDoorWindow","heightTwo","widthtTwo","secondWall","verifyThirdDoorWindow","heightThree","widthtThree","thirdWall","verifyFourthDoorWindow","heightFour","widthtFour","fourthWall"],"mappings":"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","sourcesContent":["const errorDWAlert = 'O total de área das portas e janelas deve ser no máximo 50% da área de parede';\n\nconst windowSquare = 24000;\nconst wallWindowOne = Math.ceil(Number(firstWindow)) * windowSquare;\nconst wallWindowTwo = Math.ceil(Number(secondWindow)) * windowSquare;\nconst wallWindowThree = Math.ceil(Number(thirdWindow)) * windowSquare;\nconst wallWindowFour = Math.ceil(Number(fourthWindow)) * windowSquare;\n\nconst doorSquare = 15200;\nconst wallDoorOne = Math.ceil(Number(firstDoor)) * doorSquare;\nconst wallDoorTwo = Math.ceil(Number(secondDoor)) * doorSquare;\nconst wallDoorThree = Math.ceil(Number(thirdDoor)) * doorSquare;\nconst wallDoorFour = Math.ceil(Number(fourthDoor)) * doorSquare;\n\nconst verifyFirstDoorWindow = (heightOne, widthtOne, navigate) => {\n  const firstWall = Math.ceil(Number(heightOne) * Number(widthtOne));\n  if ((Number(wallWindowOne) + Number(wallDoorOne)) > (firstWall / 2)) {\n    alert(errorDWAlert);\n    return navigate('/firstWall');\n  }\n};\n\nconst verifySecondDoorWindow = (heightTwo, widthtTwo, navigate) => {\n  const secondWall = Math.ceil(Number(heightTwo) * Number(widthtTwo));\n\n  if ((Number(wallWindowTwo) + Number(wallDoorTwo)) > (secondWall / 2)) {\n    alert(errorDWAlert);\n    return navigate('/secondWall');\n  }\n};\n\nconst verifyThirdDoorWindow = (heightThree, widthtThree, navigate) => {\n  const thirdWall = Math.ceil(Number(heightThree) * Number(widthtThree));\n\n  if ((Number(wallWindowThree) + Number(wallDoorThree)) > (thirdWall / 2)) {\n    alert(errorDWAlert)\n    return navigate('/thirdWall');\n  }\n};\n\nconst verifyFourthDoorWindow = (heightFour, widthtFour, navigate) => {\n  const fourthWall = Math.ceil(Number(heightFour) * Number(widthtFour));\n\n  if ((Number(wallWindowFour) + Number(wallDoorFour)) > (fourthWall / 2)) {\n    alert(errorDWAlert);\n    return navigate('/fourthWall')\n  }\n};\n\nexport {\n  verifyFirstDoorWindow,\n  verifySecondDoorWindow,\n  verifyThirdDoorWindow,\n  verifyFourthDoorWindow,\n};\n"]},"metadata":{},"sourceType":"module"}