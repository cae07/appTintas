{"ast":null,"code":"import { useContext } from 'react';\nimport myContext from '../Context/myContext';\nconst {\n  heightOne,\n  heightTwo,\n  heightThree,\n  heightFour,\n  widthtOne,\n  widthtTwo,\n  widthtThree,\n  widthtFour\n} = useContext(myContext);\nconst maximum = 150000;\nconst maximumAlert = 'A parede n達o pode ter mais que 15 metros quadrados.';\nconst minimun = 10000;\nconst minimumAlert = 'A parede n達o pode ter menos que 1 metro quadrado.';\nconst firstWall = Math.ceil(Number(heightOne) * Number(widthtOne));\nconst secondWall = Math.ceil(Number(heightTwo) * Number(widthtTwo));\nconst thirdWall = Math.ceil(Number(heightThree) * Number(widthtThree));\nconst fourthWall = Math.ceil(Number(heightFour) * Number(widthtFour));\n\nconst verifyFirstWallMesures = () => {\n  if (firstWall > maximum) {\n    return alert(maximumAlert);\n  }\n\n  if (firstWall < minimun) {\n    return alert(minimumAlert);\n  }\n\n  return true;\n};\n\nconst verifySecondWallMesures = () => {\n  if (secondWall > maximum) {\n    return alert(maximumAlert);\n  }\n\n  if (secondWall < minimun) {\n    return alert(minimumAlert);\n  }\n\n  return true;\n};\n\nconst verifyThirdWallMesures = () => {\n  if (thirdWall > maximum) {\n    return alert(maximumAlert);\n  }\n\n  if (thirdWall < minimun) {\n    return alert(minimumAlert);\n  }\n\n  return true;\n};\n\nconst verifyFourthWallMesures = () => {\n  if (fourthWall > maximum) {\n    return alert(maximumAlert);\n  }\n\n  if (fourthWall < minimun) {\n    return alert(minimumAlert);\n  }\n\n  return true;\n};\n\nexport { verifyFirstWallMesures, verifySecondWallMesures, verifyThirdWallMesures, verifyFourthWallMesures };","map":{"version":3,"sources":["/home/cae/digitalRepuclic/app-digital-republic/digital-republic/src/Helpers/verifyMesures.jsx"],"names":["useContext","myContext","heightOne","heightTwo","heightThree","heightFour","widthtOne","widthtTwo","widthtThree","widthtFour","maximum","maximumAlert","minimun","minimumAlert","firstWall","Math","ceil","Number","secondWall","thirdWall","fourthWall","verifyFirstWallMesures","alert","verifySecondWallMesures","verifyThirdWallMesures","verifyFourthWallMesures"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,MAAM;AACJC,EAAAA,SADI;AAEJC,EAAAA,SAFI;AAGJC,EAAAA,WAHI;AAIJC,EAAAA,UAJI;AAKJC,EAAAA,SALI;AAMJC,EAAAA,SANI;AAOJC,EAAAA,WAPI;AAQJC,EAAAA;AARI,IASFT,UAAU,CAACC,SAAD,CATd;AAWA,MAAMS,OAAO,GAAG,MAAhB;AACA,MAAMC,YAAY,GAAG,qDAArB;AACA,MAAMC,OAAO,GAAG,KAAhB;AACA,MAAMC,YAAY,GAAG,mDAArB;AAEA,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACf,SAAD,CAAN,GAAoBe,MAAM,CAACX,SAAD,CAApC,CAAlB;AACA,MAAMY,UAAU,GAAGH,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACd,SAAD,CAAN,GAAoBc,MAAM,CAACV,SAAD,CAApC,CAAnB;AACA,MAAMY,SAAS,GAAGJ,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACb,WAAD,CAAN,GAAsBa,MAAM,CAACT,WAAD,CAAtC,CAAlB;AACA,MAAMY,UAAU,GAAGL,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACZ,UAAD,CAAN,GAAqBY,MAAM,CAACR,UAAD,CAArC,CAAnB;;AAEA,MAAMY,sBAAsB,GAAG,MAAM;AACnC,MAAIP,SAAS,GAAGJ,OAAhB,EAAyB;AACvB,WAAOY,KAAK,CAACX,YAAD,CAAZ;AACD;;AACD,MAAIG,SAAS,GAAGF,OAAhB,EAAyB;AACvB,WAAOU,KAAK,CAACT,YAAD,CAAZ;AACD;;AACD,SAAO,IAAP;AACD,CARD;;AAUA,MAAMU,uBAAuB,GAAG,MAAM;AACpC,MAAIL,UAAU,GAAGR,OAAjB,EAA0B;AACxB,WAAOY,KAAK,CAACX,YAAD,CAAZ;AACD;;AACD,MAAIO,UAAU,GAAGN,OAAjB,EAA0B;AACxB,WAAOU,KAAK,CAACT,YAAD,CAAZ;AACD;;AACD,SAAO,IAAP;AACD,CARD;;AAUA,MAAMW,sBAAsB,GAAG,MAAM;AACnC,MAAIL,SAAS,GAAGT,OAAhB,EAAyB;AACvB,WAAOY,KAAK,CAACX,YAAD,CAAZ;AACD;;AACD,MAAIQ,SAAS,GAAGP,OAAhB,EAAyB;AACvB,WAAOU,KAAK,CAACT,YAAD,CAAZ;AACD;;AACD,SAAO,IAAP;AACD,CARD;;AAUA,MAAMY,uBAAuB,GAAG,MAAM;AACpC,MAAIL,UAAU,GAAGV,OAAjB,EAA0B;AACxB,WAAOY,KAAK,CAACX,YAAD,CAAZ;AACD;;AACD,MAAIS,UAAU,GAAGR,OAAjB,EAA0B;AACxB,WAAOU,KAAK,CAACT,YAAD,CAAZ;AACD;;AACD,SAAO,IAAP;AACD,CARD;;AAWA,SACEQ,sBADF,EAEEE,uBAFF,EAGEC,sBAHF,EAIEC,uBAJF","sourcesContent":["import { useContext } from 'react';\nimport myContext from '../Context/myContext';\n\nconst {\n  heightOne,\n  heightTwo,\n  heightThree,\n  heightFour,\n  widthtOne,\n  widthtTwo,\n  widthtThree,\n  widthtFour,\n} = useContext(myContext);\n\nconst maximum = 150000;\nconst maximumAlert = 'A parede n達o pode ter mais que 15 metros quadrados.'\nconst minimun = 10000;\nconst minimumAlert = 'A parede n達o pode ter menos que 1 metro quadrado.'\n\nconst firstWall = Math.ceil(Number(heightOne) * Number(widthtOne));\nconst secondWall = Math.ceil(Number(heightTwo) * Number(widthtTwo));\nconst thirdWall = Math.ceil(Number(heightThree) * Number(widthtThree));\nconst fourthWall = Math.ceil(Number(heightFour) * Number(widthtFour));\n\nconst verifyFirstWallMesures = () => {\n  if (firstWall > maximum) {\n    return alert(maximumAlert);\n  }\n  if (firstWall < minimun) {\n    return alert(minimumAlert);\n  }\n  return true;\n};\n\nconst verifySecondWallMesures = () => {\n  if (secondWall > maximum) {\n    return alert(maximumAlert);\n  }\n  if (secondWall < minimun) {\n    return alert(minimumAlert);\n  }\n  return true;\n};\n\nconst verifyThirdWallMesures = () => {\n  if (thirdWall > maximum) {\n    return alert(maximumAlert);\n  }\n  if (thirdWall < minimun) {\n    return alert(minimumAlert);\n  }\n  return true;\n};\n\nconst verifyFourthWallMesures = () => {\n  if (fourthWall > maximum) {\n    return alert(maximumAlert);\n  }\n  if (fourthWall < minimun) {\n    return alert(minimumAlert);\n  }\n  return true;\n};\n\n\nexport {\n  verifyFirstWallMesures,\n  verifySecondWallMesures,\n  verifyThirdWallMesures,\n  verifyFourthWallMesures,\n};\n"]},"metadata":{},"sourceType":"module"}