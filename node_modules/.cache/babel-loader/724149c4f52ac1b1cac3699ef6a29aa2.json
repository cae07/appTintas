{"ast":null,"code":"var _jsxFileName = \"/home/cae/digitalRepuclic/app-digital-republic/digital-republic/src/Pages/ResultPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport myContext from '../Context/myContext';\nimport '../CSS/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultPage() {\n  _s();\n\n  const {\n    name,\n    heightOne,\n    heightTwo,\n    heightThree,\n    heightFour,\n    widthtOne,\n    widthtTwo,\n    widthtThree,\n    widthtFour,\n    firstWindow,\n    secondWindow,\n    thirdWindow,\n    fourthWindow,\n    firstDoor,\n    secondDoor,\n    thirdDoor,\n    fourthDoor\n  } = useContext(myContext);\n  const [totalSquare, setTotalSquare] = useState(0);\n  const windowSquare = 2.4;\n  const doorSquare = 1.52;\n  const squareMeters = 10000; // useEffect para calcular quantos metros quadrados de parede existe para pintura\n\n  useEffect(() => {\n    const wallOne = Number(heightOne) * Number(widthtOne) / squareMeters;\n    const wallTwo = Number(heightTwo) * Number(widthtTwo) / squareMeters;\n    const wallThree = Number(heightThree) * Number(widthtThree) / squareMeters;\n    const wallFour = Number(heightFour) * Number(widthtFour) / squareMeters;\n    const sumAllWindows = (Number(firstWindow) + Number(secondWindow) + Number(thirdWindow) + Number(fourthWindow)) * windowSquare;\n    const sumAllDoors = (Number(firstDoor) + Number(secondDoor) + Number(thirdDoor) + Number(fourthDoor)) * doorSquare;\n    const total = Math.ceil(wallOne + wallTwo + wallThree + wallFour - (sumAllWindows + sumAllDoors));\n    setTotalSquare(total);\n  });\n  useEffect(() => {\n    const paintCansSize = [18, 3.6, 2.5, 0.5];\n    let totalPaint = totalSquare / 5;\n    const totalCans = [];\n    paintCansSize.forEach((tin, index) => {\n      if (tin < totalPaint) {\n        totalPaint -= tin;\n        totalCans.push(index);\n      }\n\n      return null;\n    });\n    console.log(totalCans);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ol\\xE1 \", name, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Voc\\xEA precisa de\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"para colorir \", totalSquare, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResultPage, \"GoCFD3CwaCl/gIq72vLWVSnifCs=\");\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/home/cae/digitalRepuclic/app-digital-republic/digital-republic/src/Pages/ResultPage.jsx"],"names":["React","useContext","useEffect","useState","myContext","ResultPage","name","heightOne","heightTwo","heightThree","heightFour","widthtOne","widthtTwo","widthtThree","widthtFour","firstWindow","secondWindow","thirdWindow","fourthWindow","firstDoor","secondDoor","thirdDoor","fourthDoor","totalSquare","setTotalSquare","windowSquare","doorSquare","squareMeters","wallOne","Number","wallTwo","wallThree","wallFour","sumAllWindows","sumAllDoors","total","Math","ceil","paintCansSize","totalPaint","totalCans","forEach","tin","index","push","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport myContext from '../Context/myContext';\nimport '../CSS/main.css';\n\nfunction ResultPage() {\n  const {\n    name,\n    heightOne,\n    heightTwo,\n    heightThree,\n    heightFour,\n    widthtOne,\n    widthtTwo,\n    widthtThree,\n    widthtFour,\n    firstWindow,\n    secondWindow,\n    thirdWindow,\n    fourthWindow,\n    firstDoor,\n    secondDoor,\n    thirdDoor,\n    fourthDoor,\n  } = useContext(myContext);\n  const [totalSquare, setTotalSquare] = useState(0);\n\n  const windowSquare = 2.4;\n  const doorSquare = 1.52;\n  const squareMeters = 10000;\n\n  // useEffect para calcular quantos metros quadrados de parede existe para pintura\n  useEffect(() => {\n    const wallOne = (Number(heightOne) * Number(widthtOne)) / squareMeters;\n    const wallTwo = (Number(heightTwo) * Number(widthtTwo)) / squareMeters;\n    const wallThree = (Number(heightThree) * Number(widthtThree)) / squareMeters;\n    const wallFour = (Number(heightFour) * Number(widthtFour)) / squareMeters;\n\n    const sumAllWindows = (Number(firstWindow) + Number(secondWindow) + Number(thirdWindow) + Number(fourthWindow)) * windowSquare;\n    const sumAllDoors = (Number(firstDoor) + Number(secondDoor) + Number(thirdDoor) + Number(fourthDoor)) * doorSquare;\n    const total = Math.ceil((wallOne + wallTwo + wallThree + wallFour) - (sumAllWindows + sumAllDoors));\n\n    setTotalSquare(total);\n  });\n  \n  useEffect(() => {\n    const paintCansSize = [18, 3.6, 2.5, 0.5];\n    let totalPaint = totalSquare / 5;\n    const totalCans = [];\n\n    paintCansSize.forEach((tin, index) => {\n      if (tin < totalPaint) {\n        totalPaint -= tin;\n        totalCans.push(index);\n      }\n      return null;\n    });\n\n    console.log(totalCans);\n  })\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"results\">\n        <h1>Olá {name}.</h1>\n        <h1>Você precisa de</h1>\n        <h1>X</h1>\n        <h1>para colorir {totalSquare}.</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default ResultPage;\n"]},"metadata":{},"sourceType":"module"}